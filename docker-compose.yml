networks:
  telemetry-monitoring:
    driver: bridge
    name: telemetry-monitoring

services:

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  tempo:
    container_name: tempo
    image: grafana/tempo:main-567e7f7
    networks:
      - telemetry-monitoring
    user: root
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
      - ./tmp-tempo-data:/tmp/tempo
    ports:
      - 3200:3200 # tempo

  # And put them in an OTEL collector pipeline...
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:0.105.0
    networks:
      - telemetry-monitoring
    command: [ "--config=/etc/otel-collector.yaml" ]
    ports:
      - 4317:4317
      - 4318:4318
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml

  grafana:
    container_name: grafana
    image: grafana/grafana:11.0.0
    networks:
      - telemetry-monitoring
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - 3000:3000

  loki:
    container_name: loki
    image: grafana/loki:main-bdfc86b
    networks:
      - telemetry-monitoring
    volumes:
      - ./loki.yaml:/etc/loki/loki-config.yaml:ro
    ports:
      - 3100:3100
